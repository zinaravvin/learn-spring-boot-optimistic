/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (5.3.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package org.openapi.example.api;

import java.math.BigDecimal;
import org.openapi.example.model.SelectHDStopTransResponse;
import io.swagger.annotations.*;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
import java.util.Optional;
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2022-01-26T23:18:41.423035-05:00[America/New_York]")
@Validated
@Api(value = "aristo", description = "the aristo API")
public interface AristoApi {

    default Optional<NativeWebRequest> getRequest() {
        return Optional.empty();
    }

    /**
     * POST /aristo/stops/{accountId} : Get all stop transactions per account
     *
     * @param accountId HD account number (required)
     * @return  (status code 200)
     *         or Invalid input (status code 405)
     */
    @ApiOperation(value = "Get all stop transactions per account", nickname = "getAristoStopsTransactions", notes = "", response = SelectHDStopTransResponse.class, tags={ "hdStop", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "", response = SelectHDStopTransResponse.class),
        @ApiResponse(code = 405, message = "Invalid input") })
    @RequestMapping(
        method = RequestMethod.POST,
        value = "/aristo/stops/{accountId}",
        produces = { "application/json" }
    )
    default ResponseEntity<SelectHDStopTransResponse> getAristoStopsTransactions(@ApiParam(value = "HD account number", required = true) @PathVariable("accountId") BigDecimal accountId) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"transactions\" : [ { \"errors\" : [ { \"error_msg\" : \"error_msg\", \"original_transaction_id\" : \"original_transaction_id\", \"product_id\" : \"product_id\", \"error_code\" : 0 }, { \"error_msg\" : \"error_msg\", \"original_transaction_id\" : \"original_transaction_id\", \"product_id\" : \"product_id\", \"error_code\" : 0 } ] }, { \"errors\" : [ { \"error_msg\" : \"error_msg\", \"original_transaction_id\" : \"original_transaction_id\", \"product_id\" : \"product_id\", \"error_code\" : 0 }, { \"error_msg\" : \"error_msg\", \"original_transaction_id\" : \"original_transaction_id\", \"product_id\" : \"product_id\", \"error_code\" : 0 } ] } ] }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }

}
